#!/usr/bin/env bash
set -euo pipefail

# This script manages the lifecycle of the "pyfinderdocker" Docker container.
# Define container name variable
CONTAINER_NAME="pyfinderdocker"

# 1. Stops and removes any existing "pyfinderdocker" container to ensure a clean start.
# 2. Removes the existing SQLite database file on the host to reset the database state.
# 3. Prepares host-side output directories to store various product outputs generated by the container.
# 4. Runs a new "pyfinderdocker" container with specific volume mappings and environment settings.
#
# Volume mappings:
# - Host's "host_shared" directory is mounted into the container for shared data access.
# - Output directories for FinDer, shakemap, and PyFinder are mapped to host directories to persist results.
#
# The "--platform linux/amd64" flag forces the container to run with the amd64 architecture, ensuring compatibility
# on systems where the default architecture might differ (e.g., Apple M1/M2 chips).
#
# The container runs "bash -lc 'tail -f /dev/null'" to keep the container alive indefinitely without exiting,
# allowing interactive or background processes to be executed within the container after startup.

docker stop $CONTAINER_NAME 2>/dev/null || true
docker rm $CONTAINER_NAME 2>/dev/null || true



# Prepare host-side output directories for products
HOST_OUT="$(pwd)/host_shared/docker-output"
mkdir -p "$HOST_OUT/FinDer-output" "$HOST_OUT/shakemap" "$HOST_OUT/PyFinder-output"

# Host repo roots for live development (assumes standard layout)
HOST_ROOT="$(cd .. && pwd)"  # parent of pyfinder-docker, e.g., /.../pyfinder-dev
HOST_PYFINDER="$HOST_ROOT/pyfinder"
HOST_PARAMWS="$HOST_ROOT/paramws-clients"

# Warn if repos are missing
for p in "$HOST_PYFINDER" "$HOST_PARAMWS"; do
  if [ ! -d "$p" ]; then
    echo "[WARN] Repo not found: $p (skipping bind mount)" >&2
  fi
done

# Conditional bind mounts for live code
MOUNT_PYFINDER=""
[ -d "$HOST_PYFINDER" ] && MOUNT_PYFINDER="-v $HOST_PYFINDER:/home/sysop/pyfinder"
MOUNT_PARAMWS=""
[ -d "$HOST_PARAMWS" ] && MOUNT_PARAMWS="-v $HOST_PARAMWS:/home/sysop/paramws-clients"

# Run the Docker container
docker run -d \
  --name $CONTAINER_NAME \
  --platform linux/amd64 \
  -u sysop \
  -w /home/sysop \
  -v "$(pwd)/host_shared:/home/sysop/host_shared" \
  -v "$HOST_OUT/shakemap:/home/sysop/shakemap_profiles/default/data" \
  -v "$HOST_OUT/PyFinder-output:/home/sysop/pyfinder/pyfinder/output" \
  $MOUNT_PYFINDER \
  $MOUNT_PARAMWS \
  $CONTAINER_NAME:master \
  bash -lc "tail -f /dev/null"


# Dev installs (editable) so changes in mounted sources are reflected immediately
if docker exec $CONTAINER_NAME test -d /home/sysop/paramws-clients; then
  docker exec -it $CONTAINER_NAME bash -lc "python3.9 -m pip install -e /home/sysop/paramws-clients || true"
fi
if docker exec $CONTAINER_NAME test -d /home/sysop/pyfinder; then
  docker exec -it $CONTAINER_NAME bash -lc "python3.9 -m pip install -e /home/sysop/pyfinder || true"
fi

echo "Container '$CONTAINER_NAME' is running in the background."
