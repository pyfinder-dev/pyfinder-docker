#!/usr/bin/env bash
set -euo pipefail

# This script manages the lifecycle of the "pyfinderdocker" Docker container.
# Define container name variable
CONTAINER_NAME="pyfinderdocker"

# 1. Stops and removes any existing "pyfinderdocker" container to ensure a clean start.
# 2. Removes the existing SQLite database file on the host to reset the database state.
# 3. Prepares host-side output directories to store various product outputs generated by the container.
# 4. Runs a new "pyfinderdocker" container with specific volume mappings and environment settings.
#
# Volume mappings:
# - Host's "host_shared" directory is mounted into the container for shared data access.
# - Output directories for FinDer, shakemap, and PyFinder are mapped to host directories to persist results.
#
# The "--platform linux/amd64" flag forces the container to run with the amd64 architecture, ensuring compatibility
# on systems where the default architecture might differ (e.g., Apple M1/M2 chips).
#
# The container runs "bash -lc 'tail -f /dev/null'" to keep the container alive indefinitely without exiting,
# allowing interactive or background processes to be executed within the container after startup.

docker stop $CONTAINER_NAME 2>/dev/null || true
docker rm $CONTAINER_NAME 2>/dev/null || true

# If exists, remove the database to have a clean state.
FILE="$(pwd)/host_shared/seiscomp_db/db.sqlite"

if [ -f "$FILE" ]; then
  rm "$FILE"
fi

# Prepare host-side output directories for products
HOST_OUT="$(pwd)/host_shared/docker-output"
mkdir -p "$HOST_OUT/FinDer-output" "$HOST_OUT/shakemap" "$HOST_OUT/PyFinder-output"

# Run the Docker container
docker run -d \
  --name $CONTAINER_NAME \
  --platform linux/amd64 \
  -u sysop \
  -w /home/sysop \
  -e SEISCOMP_ROOT=/opt/seiscomp \
  -v "$(pwd)/host_shared:/home/sysop/host_shared" \
  -v "$HOST_OUT/shakemap:/home/sysop/shakemap_profiles/default/data" \
  -v "$HOST_OUT/PyFinder-output:/home/sysop/pyfinder/pyfinder/output" \
  $CONTAINER_NAME:master \
  bash -lc "tail -f /dev/null"


echo "Container '$CONTAINER_NAME' is running in the background."
# View logs just in case
docker logs $CONTAINER_NAME
